import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;


public class CatatanFrame extends javax.swing.JFrame {

    /**
     * Creates new form CatatanFrame
     */
private DefaultTableModel tableModel;
    private CatatanDatabase db;
    private DefaultListModel<String> listModel;


    public CatatanFrame() {
        initComponents();
        
        String[] columnNames = {"Tanggal", "Judul", "Isi"};
tableModel = new DefaultTableModel(columnNames, 0); // Kolom dengan jumlah baris awal 0
tblCatatan = new JTable(tableModel);
tblCatatan.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

tblCatatan.getSelectionModel().addListSelectionListener(e -> tampilkanCatatan());

jScrollPane4.setViewportView(tblCatatan);

        ubahButton = new javax.swing.JButton();
ubahButton.setText("Ubah");
ubahButton.addActionListener(new java.awt.event.ActionListener() {
    
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        ubahButtonActionPerformed(evt);
    }

            private void ubahButtonActionPerformed(ActionEvent evt) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
       
    try {
            db = new CatatanDatabase();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal terhubung ke database", "Error", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }  

 refreshCatatanList();
  hapusButton.addActionListener(this::hapusCatatan);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        isiTextArea = new javax.swing.JTextArea();
        simpanButton = new javax.swing.JButton();
        hapusButton = new javax.swing.JButton();
        keluarButton = new javax.swing.JButton();
        judulTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ubahButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCatatan = new javax.swing.JTable();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 153));

        isiTextArea.setBackground(new java.awt.Color(204, 255, 204));
        isiTextArea.setColumns(20);
        isiTextArea.setRows(5);
        jScrollPane1.setViewportView(isiTextArea);

        simpanButton.setText("Simpan");
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });

        hapusButton.setText("Hapus");
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        keluarButton.setText("Keluar");
        keluarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarButtonActionPerformed(evt);
            }
        });

        judulTextField.setBackground(new java.awt.Color(204, 255, 204));
        judulTextField.setText(" ");

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buku Catatan Harian Ku");

        ubahButton.setText("Ubah");
        ubahButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahButtonActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("JUDUL CATATAN");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ISI CATATAN");

        tblCatatan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tanggal", "Judul", "Title 3"
            }
        ));
        jScrollPane4.setViewportView(tblCatatan);

        jDateChooser1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("TANGGAL");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addComponent(jLabel4)))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(judulTextField)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(ubahButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(simpanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(hapusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(keluarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(184, 184, 184)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(judulTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ubahButton)
                    .addComponent(simpanButton)
                    .addComponent(hapusButton)
                    .addComponent(keluarButton))
                .addGap(109, 109, 109))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
     if (judulTextField.getText().isEmpty() || isiTextArea.getText().isEmpty() || jDateChooser1.getDate() == null) {
        JOptionPane.showMessageDialog(this, "Judul, isi, dan tanggal tidak boleh kosong", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        simpanCatatan(); // Simpan atau perbarui catatan
        tambahCatatan(); // Kosongkan field input
    }
    }//GEN-LAST:event_simpanButtonActionPerformed

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hapusButtonActionPerformed

    private void keluarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarButtonActionPerformed

    int response = JOptionPane.showConfirmDialog(this, 
        "Apakah Anda yakin ingin keluar?", 
        "Konfirmasi Keluar", 
        JOptionPane.YES_NO_OPTION, 
        JOptionPane.QUESTION_MESSAGE);

    if (response == JOptionPane.YES_OPTION) {
        System.exit(0); // Tutup aplikasi jika pengguna mengklik "Yes"
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_keluarButtonActionPerformed

    private void ubahButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahButtonActionPerformed
    int selectedRow = tblCatatan.getSelectedRow(); // Mendapatkan baris yang dipilih
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih catatan yang ingin diubah", "Error", JOptionPane.ERROR_MESSAGE);
        return; // Hentikan proses jika tidak ada baris yang dipilih
   
// TODO add your handling code here:
    }//GEN-LAST:event_ubahButtonActionPerformed
 
String judulBaru = judulTextField.getText();
    String isiBaru = isiTextArea.getText();
    Date tanggalBaruDate = jDateChooser1.getDate();

    if (judulBaru.isEmpty() || isiBaru.isEmpty() || tanggalBaruDate == null) {
        JOptionPane.showMessageDialog(this, "Judul, isi, dan tanggal tidak boleh kosong", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String tanggalBaru = new SimpleDateFormat("yyyy-MM-dd").format(tanggalBaruDate);

    // Mendapatkan judul asli dari baris yang dipilih
    String judulLama = tableModel.getValueAt(selectedRow, 1).toString();

    try {
        // Cari catatan yang sesuai di database
        List<Catatan> catatanListData = db.ambilSemuaCatatan();
        for (Catatan catatan : catatanListData) {
            if (catatan.getJudul().equals(judulLama)) {
                // Update data catatan
                catatan.setJudul(judulBaru);
                catatan.setIsi(isiBaru);
                catatan.setTanggal(tanggalBaru);
                db.updateCatatan(catatan); // Perbarui di database
                break;
            }
        }
        JOptionPane.showMessageDialog(this, "Catatan berhasil diperbarui");
        refreshCatatanList(); // Segarkan tabel
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal mengubah catatan", "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
private void tambahCatatan() {
    // Kosongkan field input dan hilangkan seleksi di daftar catatan
    judulTextField.setText("");
    isiTextArea.setText("");
}
private void simpanCatatan() {
   String judul = judulTextField.getText();
    String isi = isiTextArea.getText();
    Date tanggalDate = jDateChooser1.getDate();
    String tanggal = new SimpleDateFormat("yyyy-MM-dd").format(tanggalDate);

    if (judul.isEmpty() || isi.isEmpty() || tanggalDate == null) {
        JOptionPane.showMessageDialog(this, "Judul, isi, dan tanggal tidak boleh kosong", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        if (tblCatatan.getSelectedRow() == -1) { // Tambah catatan baru
            Catatan catatanBaru = new Catatan(0, judul, isi, tanggal);
            db.tambahCatatan(catatanBaru);
        } else { // Perbarui catatan yang dipilih
            int selectedRow = tblCatatan.getSelectedRow();
            String selectedJudul = tableModel.getValueAt(selectedRow, 1).toString();
            List<Catatan> catatanListData = db.ambilSemuaCatatan();
            for (Catatan catatan : catatanListData) {
                if (catatan.getJudul().equals(selectedJudul)) {
                    catatan.setJudul(judul);
                    catatan.setIsi(isi);
                    catatan.setTanggal(tanggal);
                    db.updateCatatan(catatan);
                    break;
                }
            }
        }
        // Refresh daftar catatan setelah menambah atau memperbarui
        refreshCatatanList();
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal menyimpan catatan", "Error", JOptionPane.ERROR_MESSAGE);
    }
}


   private void hapusCatatan(ActionEvent e) {
    int selectedRow = tblCatatan.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih catatan yang ingin dihapus", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String judul = tableModel.getValueAt(selectedRow, 1).toString();
    try {
        List<Catatan> catatanListData = db.ambilSemuaCatatan();
        for (Catatan catatan : catatanListData) {
            if (catatan.getJudul().equals(judul)) {
                db.hapusCatatan(catatan.getId());
                break;
            }
        }
        refreshCatatanList();
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal menghapus catatan", "Error", JOptionPane.ERROR_MESSAGE);
    }
}



    private void tampilkanCatatan() {
    int selectedRow = tblCatatan.getSelectedRow();
    if (selectedRow != -1) {
        String tanggal = tableModel.getValueAt(selectedRow, 0).toString();
        String judul = tableModel.getValueAt(selectedRow, 1).toString();
        String isi = tableModel.getValueAt(selectedRow, 2).toString();
        
        // Tampilkan data ke field input
        jDateChooser1.setDate(java.sql.Date.valueOf(tanggal));
        judulTextField.setText(judul);
        isiTextArea.setText(isi);
    }
}

  private void refreshCatatanList() {
    try {
        tableModel.setRowCount(0); // Bersihkan tabel sebelum memuat ulang
        List<Catatan> catatanListData = db.ambilSemuaCatatan();
        for (Catatan catatan : catatanListData) {
            Object[] row = {catatan.getTanggal(), catatan.getJudul(), catatan.getIsi()};
            tableModel.addRow(row); // Tambahkan baris ke tabel
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal memuat catatan", "Error", JOptionPane.ERROR_MESSAGE);
    }
}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CatatanFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CatatanFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CatatanFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CatatanFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CatatanFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton hapusButton;
    private javax.swing.JTextArea isiTextArea;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField judulTextField;
    private javax.swing.JButton keluarButton;
    private javax.swing.JButton simpanButton;
    private javax.swing.JTable tblCatatan;
    private javax.swing.JButton ubahButton;
    // End of variables declaration//GEN-END:variables
}
